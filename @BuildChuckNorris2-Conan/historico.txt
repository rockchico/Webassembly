    1  apt-get update
    2  sudo apt-get update
    3  vim /etc/environment 
    4  sudo vim /etc/environment 
    5  sudo apt-get update
    6  sudo apt-get install cntlm
    7  cntlm -H
    8  vim /etc/cntlm.conf 
    9  sudo vim /etc/cntlm.conf 
   10  cntlm -H
   11  sudo /etc/init.d/cntlm restart
   12  cntlm -H
   13  sudo vim /etc/cntlm.conf 
   14  reboot
   15  sudo reboot
   16  sudo su
   17  sudo shutdown -h now
   18  exit
   19  sudo cntlm -H
   20  sudo vim /etc/cntlm.conf 
   21  sudo /etc/init.d/cntlm restart
   22  sudo vim /etc/cntlm.conf 
   23  sudo vim /etc/environment 
   24  sudo /etc/init.d/cntlm stop
   25  sudo /etc/init.d/cntlm start
   26  sudo cntlm -H
   27  sudo vim /etc/cntlm.conf 
   28  sudo /etc/init.d/cntlm restart
   29  sudo /etc/init.d/cntlm stop
   30  sudo cntlm -H
   31  sudo vim /etc/cntlm.conf 
   32  sudo /etc/init.d/cntlm start
   33  sudo apt-get update
   34  sudo vim /etc/environment 
   35  ifconfig
   36  route -n
   37  sudo curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash
   38  export NVM_DIR="/home/francisco/.nvm"
   39  nvm version
   40  sudo export NVM_DIR="/home/francisco/.nvm"
   41  nvm version
   42  nvm --version
   43  nvm update
   44  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bas
   45  sudo curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
   46  sudo curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bas
   47  sudo curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
   48  nvm --version
   49  nvm install node
   50  nvm ls-remote
   51  nvm
   52  nvm install 10.16.2
   53  nvm ls-remote
   54  sudo nvm ls-remote
   55  nvm install --lts
   56  nvm ls-remote --lts
   57  node -v
   58  nvm ls
   59  nvm install
   60  nvm install 10.16
   61  nvm install lts/*
   62  nvm install 10
   63  nvm proxy "http://127.0.0.1:3128"
   64  sudo vim /etc/environment 
   65  nvm ls-remote
   66  vim ~/.nvm/package.json 
   67  node
   68  nvm proxy
   69  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
   70  wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
   71  nvm version
   72  rm -Rf ~/.nvm/
   73  sudo wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
   74  vim ~/.bash
   75  vim ~/.bashrc 
   76  source ~/.bashrc 
   77  sudo wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
   78  exit
   79  sudo wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
   80  exit
   81  nvm
   82  nvm --version
   83  nvm ls-remote
   84  nvm proxy
   85  nvm install-latest-npm
   86  sudo vim /etc/environment 
   87  exit
   88  nvm ls-remote
   89  curl $NVM_NODEJS_ORG_MIRROR
   90  curl -v https://nodejs.org/dist/
   91  sudo vim /etc/cntlm.conf 
   92  curl -v https://nodejs.org/dist/
   93  sudo vim /etc/cntlm.conf 
   94  sudo /etc/init.d/cntlm restart
   95  curl -v https://nodejs.org/dist/
   96  sudo apt-get update
   97  curl -v https://iojs.org/dist/
   98  sudo vim /etc/environment 
   99  npm
  100  sudo apt-get install aptitude
  101  sudo aptitude search node
  102  sudo apt-get install nodejs
  103  npm
  104  node
  105  nodejs
  106  nodejs --version
  107  pwd
  108  cd ..
  109  ls -la
  110  cd mnt/d/Francisco/xampp/htdocs/TutoNodejs/
  111  npm
  112  sudo apt-get install npm
  113  npm
  114  npm --version
  115  npm -v
  116  python -v
  117  exit
  118  npm -v
  119  sudo npm i -g npm
  120  npm -v
  121  vim ~/.bashrc 
  122  source ~/.bashrc 
  123  node --version
  124  curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
  125  sudo apt-get install -y nodejs
  126  curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
  127  pwd
  128  cd /mnt/d/Francisco/xampp/htdocs/TutoNodejs/
  129  npm start
  130  sudo vim /etc/environment 
  131  sudo vim /etc/cntlm.conf 
  132  sudo systemctl restart cntlm
  133  sudo /etc/init.d/cntlm restart
  134  curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
  135  curl -v
  136  curl -vsL https://deb.nodesource.com/setup_10.x | sudo -E bash - 
  137  sudo aptitude search yarn
  138  yarn
  139  yarn start
  140  yarn install lodash
  141  yarn add lodash
  142  npm install lodash --save
  143  npm config set proxy http://127.0.0.1:8080
  144  npm config set https-proxy http://127.0.0.1:8080
  145  npm install lodash --save
  146  netstat -nat
  147  sudo /etc/init.d/cntlm start
  148  netstat -nat
  149  netstat -na
  150  netstat
  151  npm install lodash --save
  152  cd /opt/
  153  git
  154  sudo git clone https://github.com/emscripten-core/emsdk.git
  155  cd emsdk/
  156  ./emsdk install latest
  157  sudo ./emsdk install latest
  158  sudo ./emsdk activate latest
  159  source ./emsdk_env.sh 
  160  cd /mnt/d/Francisco/xampp/htdocs/TutoNodejs/
  161  ls -la
  162  emcc -s WASM=1 -s ONLY_MY_CODE=1 -s EXPORTED_FUNCTIONS="['_add']" -o wasm/add.wasm src/add.c
  163  emcc src/fib.c -O3 -s WASM=1 -s SIDE_MODULE=1 -s EXPORTED_FUNCTIONS='["_fib"]' -o wasm/fib.wasm
  164  sudo emcc src/fib.c -O3 -s WASM=1 -s SIDE_MODULE=1 -s EXPORTED_FUNCTIONS='["_fib"]' -o wasm/fib.wasm
  165  emcc src/fib.c -O3 -s WASM=1 -s SIDE_MODULE=1 -s EXPORTED_FUNCTIONS='["_fib"]' -o wasm/fib.wasm
  166  ls -la
  167  cd src/
  168  emcc add.c -o add.js add.wasm 
  169  sudo chmod 777 -Rf /home/francisco/.emscripten_cache
  170  emcc add.c -o add.js add.wasm 
  171  emcc test.c -o test.js test.wasm 
  172  emcc test.c -o test.wasm 
  173  emcc test.c -O3 -s WASM=1 -s SIDE_MODULE=1 -s EXPORTED_FUNCTIONS='["_add"]' -o test.wasm
  174  emcc test.c -O2 -s WASM=1 -s SIDE_MODULE=1 -o test.wasm
  175  emcc test.c -O3 -s WASM=1 -s SIDE_MODULE=1 -s EXPORTED_FUNCTIONS='["_add"]' -o test.wasm
  176  clang
  177  emcc fib.c 
  178  emcc fib.c -o fib.wasm
  179  emcc fib.c -O3 -s WASM=1 -s SIDE_MODULE=1 -s EXPORTED_FUNCTIONS='["_fib"]' -o fib.wasm
  180  sudo aptitude search docker
  181  sudo apt-get update
  182  sudo /etc/init.d/cntlm stop
  183  sudo apt-get update
  184  sudo apt-get remove docker docker-engine docker.io
  185  sudo apt install docker.io
  186  sudo systemctl start docker
  187  sudo /etc/init.d/docker start
  188  sudo systemctl enable docker
  189  docker --version
  190  cd /mnt/d/Francisco/xampp/htdocs/WebassemblyDocker/
  191  docker pull trzeci/emscripten
  192  sudo docker pull trzeci/emscripten
  193  sudo /etc/init.d/docker status
  194  sudo /etc/init.d/docker start
  195  sudo /etc/init.d/docker status
  196  tail -f /var/log/docker.log 
  197  ls -la /opt/
  198  cd /opt/emsdk/
  199  source emsdk_env.sh 
  200  cd /mnt/d/Francisco/xampp/htdocs/Webassembly/
  201  emcc -O3 -s WASM=1 -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap"]' fib.c
  202  sudo aptitude search apache
  203  sudo apt-get install apache2
  204  git init
  205  git remote add origin https://github.com/rockchico/Webassembly.git
  206  pwd
  207  sudo vim /etc/apache2/sites-enabled/000-default.conf 
  208  sudo /etc/init.d/apache2 restart
  209  cd ..
  210  ls -la
  211  cd ..
  212  sudo chgrp www-data -Rf htdocs
  213  sudo chgrp www-data -Rf htdocs/Webassembly
  214  ls -la
  215  ls -la
  216  sudo vim /etc/apache2/sites-enabled/000-default.conf 
  217  sudo /etc/init.d/apache2 restart
  218  cp -Rf htdocs/Webassembly/ /var/www/html/
  219  sudo cp -Rf htdocs/Webassembly/ /var/www/html/
  220  sudo /etc/init.d/apache2 stop
  221  cd htdocs/Webassembly/ExemploWebP/
  222  emcc -O3 -s WASM=1 -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap"]' -I libwebp webp.c libwebp/src/{dec,dsp,demux,enc,mux,utils}/*.c
  223  emcc -O3 -std=c++1z -s WASM=1 -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap"]' -I libwebp webp.c libwebp/src/{dec,dsp,demux,enc,mux,utils}/*.c
  224  emcc -O3 -s WASM=1 -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap"]' -I libwebp webp.c libwebp/src/{dec,dsp,demux,enc,mux,utils}/*.c
  225  ping houaiss.tjrs.gov.br
  226  emcc -O3 -s WASM=1 -s ALLOW_MEMORY_GROWTH=1 -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap"]' -I libwebp webp.c libwebp/src/{dec,dsp,demux,enc,mux,utils}/*.c
  227  ping houaiss.tjrs.gov.br
  228  cd ..
  229  ls -la
  230  cd ExemploBind/
  231  emcc --bind -O3 add.cpp
  232  emcc --bind -O3 process_message.cpp -o process_message.js
  233  emcc --bind -O3 classes.cpp -o classes.js
  234  cd ..
  235  npm
  236  node
  237  mkdir ExemploWithNpm
  238  cd ExemploWithNpm/
  239  npm init
  240  npm run build
  241  vim /home/francisco/.npm/_logs/2019-08-14T19_11_24_724Z-debug.log
  242  npm run build
  243  clear
  244  npm run build
  245  npm install
  246  npm run build
  247  yarn build
  248  sudo chmod +x build.sh 
  249  ./build.sh 
  250  yarn build
  251  npm install --save napa
  252  npm install -g npm
  253  netstat
  254  telnet localhost 3128
  255  npm install -g npm
  256  sudo /etc/init.d/cntlm start
  257  sudo /etc/init.d/cntlm status
  258  npm install -g npm
  259  npm help
  260  npm config help
  261  npm config set help
  262  npm config set https-proxy http://proxy.tjrs.gov.br:8080
  263  npm config set http-proxy http://proxy.tjrs.gov.br:8080
  264  npm install -g npm
  265  npm update
  266  npm config set http-proxy http://localhost:3128
  267  npm config set https-proxy http://localhost:3128
  268  npm install -g npm
  269  sudo npm install -g npm
  270  whereis npm
  271  npm install
  272  npm build
  273  npm run build
  274  exit
  275  cd /opt/
  276  ls -la
  277  cd emsdk/
  278  history | grep source
  279  source ./emsdk_env.sh 
  280  cd ..
  281  sudo apt-get update
  282  sudo git clone https://github.com/opencv/opencv.git
  283  ls -la
  284  sudo wget https://github.com/opencv/opencv/archive/4.1.1.tar.gz
  285  sudo tar -zxvf 4.1.1.tar.gz 
  286  ls -la
  287  sudo mv 4.1.1.tar.gz opencv-4.1.1.tar.gz 
  288  sudo wget https://github.com/opencv/opencv_contrib/archive/4.1.1.tar.gz
  289  sudo tar -zxvf 4.1.1.tar.gz 
  290  sudo mv 4.1.1.tar.gz opencv_contrib-4.1.1.tar.gz 
  291  ls -la
  292  aptitude search ninja
  293  sudo apt-get install ninja-build
  294  aptitude search cmake
  295  sudo apt-get install cmake cmake-gui
  296  cd opencv
  297  cd opencv-4.1.1/
  298  sudo cmake-gui 
  299  cmake
  300  cd ..
  301  mkdir /mnt/d/Francisco/xampp/htdocs/Webassembly/build
  302  cmake /opt/opencv-4.1.1 /mnt/d/Francisco/xampp/htdocs/Webassembly/build
  303  cmake /opt/opencv-4.1.1
  304  sudo cmake /opt/opencv-4.1.1
  305  man cmake-gui 
  306  cmake-gui 
  307  aptitude search cmake
  308  sudo apt-get install cmake-curses-gui
  309  aptitude search cmake
  310  ccmake 
  311  ccmake /opt/opencv-4.1.1
  312  sudo ccmake /opt/opencv-4.1.1
  313  sudo ninja
  314  exit
  315  cd /mnt/d/Francisco/xampp/htdocs/Webassembly/ExemploReact/wasm/
  316  emcc 0s --bind -s STRICT=1 -s ALLOW_MEMORY_GROWTH=1 -s MALLOC=emmalloc -s MODULARIZE=1 -s EXPORT_ES6=1 process_message.cpp -o process_message.js
  317  source /opt/emsdk/emsdk_env.sh 
  318  emcc 0s --bind -s STRICT=1 -s ALLOW_MEMORY_GROWTH=1 -s MALLOC=emmalloc -s MODULARIZE=1 -s EXPORT_ES6=1 process_message.cpp -o process_message.js
  319  emcc -Os --bind -s STRICT=1 -s ALLOW_MEMORY_GROWTH=1 -s MALLOC=emmalloc -s MODULARIZE=1 -s EXPORT_ES6=1 process_message.cpp -o process_message.js
  320  emcc -Os --bind -s STRICT=1 -s ALLOW_MEMORY_GROWTH=1 -s MALLOC=emmalloc -s MODULARIZE=1 -s EXPORT_ES6=1 -s ENVIRONMENT=web process_message.cpp -o process_message.js
  321  emcc -Os --bind -s STRICT=1 -s ALLOW_MEMORY_GROWTH=1 -s MALLOC=emmalloc -s MODULARIZE=1 -s EXPORT_ES6=1 process_message.cpp -o process_message.js
  322  emcc -O3 -s WASM=1 -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap"]' fib.c
  323  emcc -O3 -s WASM=1 -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap"]' fib.c -o fib.js
  324  cd /mnt/d/Francisco/xampp/htdocs/Webassembly/ExemploReact/
  325  cd src/external/
  326  emcc -Os --bind -s STRICT=1 -s ALLOW_MEMORY_GROWTH=1 -s MALLOC=emmalloc -s MODULARIZE=1 -s EXPORT_ES6=1 process_message.cpp -o process_message.js
  327  source /opt/emsdk/emsdk_env.sh 
  328  emcc -Os --bind -s STRICT=1 -s ALLOW_MEMORY_GROWTH=1 -s MALLOC=emmalloc -s MODULARIZE=1 -s EXPORT_ES6=1 process_message.cpp -o process_message.js
  329  cd ..
  330  cd src/wasm/
  331  ls -la
  332  emcc -Os --bind -s STRICT=1 -s ALLOW_MEMORY_GROWTH=1 -s MALLOC=emmalloc -s MODULARIZE=1 -s EXPORT_ES6=1 add.cpp -o add.js
  333  exit
  334  cd /mnt/d/Francisco/xampp/htdocs/Cplus-plus/
  335  ls
  336  gcc big-file.cpp -o big-file
  337  g++ big-file.cpp -o big-file
  338  ls -la
  339  ./big-file
  340  g++ big-file.cpp -o big-file
  341  ./big-file
  342  g++ big-file.cpp -o big-file
  343  ./big-file
  344  g++ big-file.cpp -o big-file
  345  ./big-file
  346  g++ tokenize.cpp -o tokenize
  347  ./tokenize
  348  cd ..
  349  cd Webassembly/ExemploC++/
  350  cd ChuckNorris/
  351  g++ -c -I include/ src/ChuckNorris.cpp -o libchucknorris.o
  352  ls -la 
  353  ar cr libchucknorris.a libchucknorris.o
  354  ls -la
  355  g++ -c -I include/ src/main.cpp -o main.o
  356  g++ main.o libchucknorris.a -o cpp_demo
  357  ./cpp_demo 
  358  mkdir -p build/default
  359  cd build/default
  360  cmake -GNinja ../..
  361  ls -la
  362  ninja
  363  ls -la
  364  ninja
  365  cd ..
  366  mkdir -p 3rdpart/sqlite
  367  cd 3rdpart/sqlite
  368  wget https://www.sqlite.org/2018/sqlite-amalgamation-3220000.zip
  369  cd ..
  370  cd build/default
  371  ninja
  372  ./cpp_demo 
  373  exit
  374  cd /mnt/d/Francisco/xampp/htdocs/Webassembly/ExemploReact/
  375  ls -la /opt/
  376  mkdir /home/francisco/WasmUtils
  377  mv -f /opt/emsdk/ /home/francisco/WasmUtils/
  378  sudo mv -f /opt/emsdk/ /home/francisco/WasmUtils/
  379  ls -la /home/francisco/WasmUtils/
  380  sudo chown -Rf francisco:francisco  /home/francisco/WasmUtils/
  381  npm run build
  382  source  /home/francisco/WasmUtils/emsdk/emsdk_env.sh 
  383  exit
  384  source /home/francisco/WasmUtils/emsdk/emsdk_env.sh 
  385  ls -la /opt/
  386  history | grep emsdk
  387  cd /home/francisco/WasmUtils/
  388  ls -la
  389  rm -Rf emsdk/
  390  rm -Rf /home/francisco/.emscripten
  391  git clone https://github.com/emscripten-core/emsdk.git
  392  cd emsdk/
  393  ./emsdk install latest
  394  sudo /etc/init.d/cntlm start
  395  ./emsdk install latest
  396  cd /home/francisco/WasmUtils/emsdk/
  397  ./emsdk install latest
  398  vim /etc/cntlm.conf
  399  sudo vim /etc/cntlm.conf
  400  sudo /etc/init.d/cntlm start
  401  ./emsdk install latest
  402  sudo vim /etc/cntlm.conf
  403  cntlm -h
  404  sudo cntlm. -c .\cntlm.ini -v -f
  405  sudo /etc/init.d/cntlm stop
  406  sudo cntlm -c /etc/cntlm.conf -v -f
  407  sudo cntlm -c /etc/cntlm.conf -v -f &
  408  bg
  409  fg
  410  cntlm -c /etc/cntlm.conf -M https://storage.googleapis.com/webassembly/emscripten-releases-builds/linux/05f8c01394ddd0838d3cb484ba8ca97a3efc1ac9/wasm-binaries.tbz2
  411  ps aux | grep cntlm
  412  vim /etc/environment 
  413  sudo vim /etc/environment 
  414  cntlm -c /etc/cntlm.conf -M https://storage.googleapis.com/webassembly/emscripten-releases-builds/linux/05f8c01394ddd0838d3cb484ba8ca97a3efc1ac9/wasm-binaries.tbz2
  415  cntlm -c /etc/cntlm.conf -M https://www.google.com
  416  cntlm -v -c /etc/cntlm.conf -M https://www.google.com
  417  sudo cntlm -v -c /etc/cntlm.conf -M https://www.google.com
  418  bash <(curl -Ss https://my-netdata.io/kickstart.sh)
  419  bash
  420  sudo bash <(curl -Ss https://my-netdata.io/kickstart.sh)
  421  sudo bash <(curl -Ss https://my-netdata.io/kickstart.sh)>
  422  curl -Ss https://my-netdata.io/kickstart.sh
  423  pwd
  424  git clone https://github.com/netdata/netdata.git --depth=100
  425  cd netdata/
  426  ./netdata-installer.sh
  427  sudo ./netdata-installer.sh
  428  aptitude search autptools
  429  aptitude search autotools
  430  sudo apt-get install autotools-dev
  431  sudo ./netdata-installer.sh
  432  sudo apt-get install autoconf
  433  sudo ./netdata-installer.sh
  434  sudo apt-get install libuuid-devel
  435  sudo apt-get install libuuid
  436  sudo apt-get install automake
  437  sudo apt-get install pkg-config
  438  sudo ./netdata-installer.sh --libs-are-really-here
  439  aptitude search uuid
  440  sudo apt-get install uuid uuid-dev
  441  sudo ./netdata-installer.sh --libs-are-really-here
  442  sudo apt-get install zlib
  443  aptitude search zlib
  444  sudo apt-get install zlibc
  445  sudo ./netdata-installer.sh --libs-are-really-here
  446  sudo apt-get install zlib1g-dev
  447  sudo ./netdata-installer.sh --libs-are-really-here
  448  sudo /usr/libexec/netdata/netdata-uninstaller.sh
  449  sudo /usr/libexec/netdata/netdata-uninstaller.sh --yes
  450  clear
  451  cd /home/francisco/WasmUtils/
  452  sudo apt-get update
  453  sudo /etc/init.d/cntlm start
  454  sudo apt-get update
  455  sudo /etc/init.d/cntlm stop
  456  sudo apt-get update
  457  sudo apt-get remove docker docker-engine docker.io
  458  sudo apt-get install docker.io
  459  sudo systemctl start docker
  460  exit
  461  cd /mnt/d/Francisco/xampp/htdocs/Webassembly/ExemploReact/src/wasm/
  462  source /home/francisco/WasmUtils/emsdk/emsdk_env.sh 
  463  ninja
  464  ls -la
  465  ls -lah
  466  date
  467  sudo dpkg-reconfigure tzdata
  468  dpkg-reconfigure tzdata
  469  date
  470  date -s "10:47:0"
  471  sudo date -s "10:47:00"
  472  date -s "10:47:0"
  473  date
  474  ninja
  475  cd ..
  476  yarn build
  477  ls -la
  478  cd ..
  479  yarn build
  480  cd src/wasm/
  481  ninja
  482  cd ..
  483  yarn build
  484  cd src/wasm/
  485  cmake . -GNinja -DCMAKE_TOOLCHAIN_FILE=/home/francisco/WasmUtils/emsdk/fastcomp/emscripten/cmake/Modules/Platform/Emscripten.cmake -DEMSCRIPTEN=1 -DEMSCRIPTEN_FORCE_COMPILERS=1
  486  ninja
  487  cmake . -GNinja -DCMAKE_TOOLCHAIN_FILE=/home/francisco/WasmUtils/emsdk/fastcomp/emscripten/cmake/Modules/Platform/Emscripten.cmake -DEMSCRIPTEN=1 -DEMSCRIPTEN_FORCE_COMPILERS=1
  488  ninja
  489  cd ..
  490  yarn build
  491  yarn build:wasm
  492  yarn build
  493  cd src/wasm/
  494  ninja
  495  cd ..
  496  yarn build
  497  cd src/wasm/
  498  ninja
  499  cd ..
  500  ./build-wasm.sh 
  501  yarn build:wasm
  502  whereis sed
  503  yarn build:wasm
  504  cd src/wasm/
  505  sed -n '/^#include/p;q' ProcessMessage.js
  506  sed -n '/^\/* eslint-disable *\//p;q' ProcessMessage.js
  507  sed -n '/^/* eslint-disable *//p;q' ProcessMessage.js
  508  sed -n '/^/* eslint-disable */p;q' ProcessMessage.js
  509  sed -i '1s/^/\n /' ProcessMessage.js
  510  cd ..
  511  yarn build:wasm
  512  yarn build
  513  yarn build:wasm
  514  yarn build
  515  yarn build:wasm
  516  sed -n '1{/^#include/p};q' src/wasm/ProcessMessage.js
  517  sed -n '1{/^/* eslint-disable *//p};q' src/wasm/ProcessMessage.js
  518  sed -n '1{/^/\* eslint-disable \*//p};q' src/wasm/ProcessMessage.js
  519  sed -n '1{/* eslint-disable \*//p};q' src/wasm/ProcessMessage.js
  520  sed -n '1{/* eslint-disable *//p};q' src/wasm/ProcessMessage.js
  521  sed -n '1{/* eslint-disable */};q' src/wasm/ProcessMessage.js
  522  sed -n '/^#include/p;q' src/wasm/ProcessMessage.js
  523  sed -n '/eslint/p;q' src/wasm/ProcessMessage.js
  524  yarn build:wasm
  525  sed -n '/eslint/p;q' src/wasm/ProcessMessage.js
  526  sed -n '/TE/p;q' src/wasm/ProcessMessage.js
  527  yarn build:wasm
  528  exit
  529  cd /mnt/d/Francisco/xampp/htdocs/Webassembly/ExemploReact/src/wasm/
  530  cd ..
  531  yarn build:wasm
  532  yarn build
  533  yarn build:wasm
  534  yarn build
  535  cmake -h
  536  yarn build:wasm
  537  cd ../ExemploWebPNinja/
  538  ./build-wasm.sh 
  539  clear
  540  ./build-wasm.sh 
  541  clear
  542  ./build-wasm.sh 
  543  clear
  544  ./build-wasm.sh 
  545  cd ..
  546  cd ExemploReact/
  547  yarn build:wasm
  548  cd src/wasm/
  549  ./build-wasm.sh 
  550  cd ..
  551  yarn build
  552  yarn build:wasm
  553  yarn build
  554  exit
  555  cd /mnt/d/Francisco/xampp/htdocs/Webassembly/ExemploReact/src/wasm/
  556  cd ..
  557  yarn build:wasm
  558  EXIT
  559  cd /mnt/d/Francisco/xampp/htdocs/Webassembly/ExemploReact/src/wasm/
  560  cd ..
  561  ls -la /home/francisco/WasmUtils/
  562  cd /home/francisco/WasmUtils/
  563  wget https://github.com/opencv/opencv/archive/4.1.2.tar.gz
  564  ls -la
  565  tar -zxvf 4.1.2.tar.gz 
  566  ls -la
  567  wget https://github.com/opencv/opencv_contrib/archive/4.1.2.zip
  568  unz
  569  unzip 4.1.2.zip 
  570  apt-get install unzip
  571  sudo apt-get install unzip
  572  ls -la
  573  rm 4.1.2.*
  574  wget https://github.com/opencv/opencv_contrib/archive/4.1.2.tar.gz
  575  tar -zxvf 4.1.2.tar.gz 
  576  cmake
  577  cmake --help
  578  history | grep cmake
  579  ls -la /opt/
  580  ccmake opencv-4.1.2/
  581  ccmake -GNinja opencv-4.1.2/
  582  ccmake -GNinja -DCMAKE_TOOLCHAIN_FILE=/home/francisco/WasmUtils/emsdk/fastcomp/emscripten/cmake/Modules/Platform/Emscripten.cmake opencv-4.1.2/ 
  583  ls -la opencv-4.1.2/
  584  ccmake -GNinja -DCMAKE_TOOLCHAIN_FILE=/home/francisco/WasmUtils/emsdk/fastcomp/emscripten/cmake/Modules/Platform/Emscripten.cmake opencv-4.1.2/ 
  585  rm -Rf opencv-4.1.2/CMakeLists.txt 
  586  ccmake -GNinja -DCMAKE_TOOLCHAIN_FILE=/home/francisco/WasmUtils/emsdk/fastcomp/emscripten/cmake/Modules/Platform/Emscripten.cmake opencv-4.1.2/ 
  587  ls -la
  588  rm -Rf version_string.tmp unix-install/ tmp/ test-reports/ setup_vars.sh  python_loader/ opencv* modules/ include/
  589  rm -Rf 3rdparty/ CMake* CPack* OpenCVConfig
  590  ls -la
  591  rm -Rf OpenCVConfig*
  592  rm -Rf apps/
  593  rm -Rf configured/ custom_hal.hpp cv*
  594  ls -la
  595  rm cmake_uninstall.cmake 
  596  rm -Rf data
  597  rm -Rf doc/
  598  ls -la
  599  mv 4.1.2.tar.gz opencv_contrib.tar.gz
  600  wget https://github.com/opencv/opencv/archive/4.1.2.tar.gz
  601  mv 4.1.2.tar.gz opencv.tar.gz
  602  tar -zxvf opencv.tar.gz 
  603  tar -zxvf opencv_contrib.tar.gz 
  604  cd opencv_contrib-4.1.2/
  605  pwd
  606  cd ..
  607  mkdir -p opencv-4.1.2/build
  608  ccmake -GNinja -DCMAKE_TOOLCHAIN_FILE=/home/francisco/WasmUtils/emsdk/fastcomp/emscripten/cmake/Modules/Platform/Emscripten.cmake opencv-4.1.2/ --build opencv-4.1.2/build/
  609  ccmake -h
  610  cd opencv-4.1.2/build/
  611  ccmake -GNinja -T/home/francisco/WasmUtils/emsdk/fastcomp/emscripten/cmake/Modules/Platform/Emscripten.cmake ..
  612  ccmake -T/home/francisco/WasmUtils/emsdk/fastcomp/emscripten/cmake/Modules/Platform/Emscripten.cmake -GNinja .. 
  613  ccmake -GNinja .. 
  614  ls -la
  615  rm -Rf *
  616  ccmake -T/home/francisco/WasmUtils/emsdk/fastcomp/emscripten/cmake/Modules/Platform/Emscripten.cmake -GNinja .. 
  617  rm -Rf *
  618  ccmake -GNinja .. 
  619  exit
  620  cd /mnt/d/
  621  ls -la
  622  tar -zxvf oc.tar.gz 
  623  ls -la
  624  cd oc
  625  mv oc /usr/bin/
  626  sudp mv oc /usr/bin/
  627  sudo mv oc /usr/bin/
  628  cd ~
  629  oc
  630  oc login
  631  exit
  632  oc login -u rockchico@gmail.com
  633  cd /mnt/d/Francisco/xampp/htdocs/
  634  git clone https://github.com/rockchico/nodejs-ex.git
  635  cd nodejs-ex/
  636  ls -la
  637  oc login
  638  oc -h
  639  clear
  640  oc login --token=f1Yj-En2xuoE7HofOp2pBsaFUSEWlY6VYLS_UmSjrMA --server=https://api.ca-central-1.starter.openshift-online.com:6443
  641  oc -h
  642  oc env dc/frontend HTTP_PROXY=http://127.0.0.1:3128
  643  oc env HTTP_PROXY=http://127.0.0.1:3128
  644  oc ex HTTP_PROXY=http://127.0.0.1:3128
  645  exit
  646  cd /mnt/d/Francisco/xampp/htdocs/Webassembly/@BuildChuckNorris/
  647  g++ -c -I include/ src/ChuckNorris.cpp -o libchucknorris.o
  648  ls -la
  649  ar cr libchucknorris.a libchucknorris.o
  650  g++ -c -I include/ src/main.cpp -o main.o
  651  ls -la
  652  g++ main.o libchucknorris.a -o cpp_demo
  653  ls -la
  654  ./cpp_demo 
  655  mkdir -p build/default
  656  cd build/default/
  657  cmake -GNinja ../..
  658  ls -la
  659  ninja
  660  ls -la
  661  ./cpp_demo 
  662  ninja
  663  cmake -GNinja ../..
  664  ninja
  665  cd ..
  666  mkdir -p 3rdpart/sqlite
  667  cd 3rdpart/sqlite
  668  wget https://www.sqlite.org/2019/sqlite-amalgamation-3300100.zip
  669  cd ..
  670  cd @BuildChuckNorris2/
  671  mkdir -p 3rdpart/sqlite
  672  cd 3rdpart/sqlite
  673  ls -la
  674  unzip sqlite-amalgamation-3300100.zip 
  675  sudo apt-get unzip
  676  sudo apt-get install unzip
  677  gcc -c sqlite3.c -o sqlite3.o
  678  cd sqlite-amalgamation-3300100/
  679  gcc -c sqlite3.c -o sqlite3.o
  680  ar qf libsqlite3.a sqlite3.o
  681  ranlib libsqlite3.a
  682  ls -la
  683  mkdir include lib
  684  mv libsqlite3.a lib/
  685  mv sqlite3.h include/
  686  cd lib/
  687  pwd
  688  cd ..
  689  mkdir -p build/default
  690  cd build/default/
  691  cmake -GNinja ../..
  692  ninja -v
  693  cmake -GNinja ../..
  694  ninja -v
  695  cmake -GNinja ../..
  696  ninja -v
  697  cmake -GNinja ../..
  698  ninja -v
  699  cmake -GNinja ../..
  700  ninja -v
  701  cd ..
  702  cd 3rdpart/sqlite/sqlite-amalgamation-3300100/
  703  ls -la
  704  gcc -c -o sqlite3.o sqlite3.c 
  705  cd ..
  706  cd build/default/
  707  cmake -GNinja ../..
  708  ninja -v
  709  cmake -GNinja ../..
  710  ninja -v
  711  cd ..
  712  cd 3rdpart/sqlite/sqlite-amalgamation-3300100/
  713  ls -la
  714  gcc -c sqlite3.c -lpthread -ldl -o sqlite3.o
  715  cd ..
  716  cd build/default/
  717  cmake -GNinja ../..
  718  ninja -v
  719  cd ..
  720  cd 3rdpart/sqlite/sqlite-amalgamation-3300100/
  721  ar qf libsqlite3.a sqlite3.o
  722  ranlib libsqlite3.a
  723  mv libsqlite3.a lib/
  724  cd ..
  725  cd build/default/
  726  cmake -GNinja ../..
  727  ninja -v
  728  sudo apt-get install sqlite3-dev
  729  cd ..
  730  cd 3rdpart/sqlite/
  731  cd sqlite-amalgamation-3300100/
  732  ls -la
  733  rm sqlite3.o
  734  rm lib/libsqlite3.a 
  735  gcc -c sqlite3.c -lpthread -ldl -o sqlite3.o
  736  ar qf libsqlite3.a sqlite3.o
  737  ranlib libsqlite3.a
  738  mv libsqlite3.a lib
  739  ls -la lib/
  740  cd ..
  741  cd build/default/
  742  cmake -GNinja ../..
  743  ninja -v
  744  cmake -GNinja ../..
  745  ninja -v
  746  cmake -GNinja ../..
  747  ninja -v
  748  ls -la ../../3rdpart/
  749  ls -la ../../3rdpart/sqlite/
  750  ls -la ../../3rdpart/sqlite/sqlite-amalgamation-3300100
  751  ls -la ../../3rdpart/sqlite/sqlite-amalgamation-3300100/include/
  752  ls -la ../../3rdpart/sqlite/sqlite-amalgamation-3300100/
  753  cmake -GNinja ../..
  754  ninja -v
  755  cmake -GNinja ../..
  756  ninja -v
  757  cmake -GNinja ../..
  758  ninja -v
  759  exit
  760  cd /mnt/d/Francisco/xampp/htdocs/Webassembly/@BuildChuckNorris2/3rdpart/sqlite/sqlite-amalgamation-3300100/
  761  ls -la
  762  gcc -c sqlite3.c -o sqlite3.o
  763  ls -la
  764  ar qf libsqlite3.a sqlite3.o
  765  ls -la
  766  ls -lah
  767  ranlib libsqlite3.a
  768  mkdir lib include
  769  mv libsqlite3.a lib/
  770  mv sqlite3.h include/
  771  cd ..
  772  cd build/default/
  773  cmake -GNinja ../..
  774  ninja
  775  cmake -GNinja ../..
  776  ninja
  777  cmake -GNinja ../..
  778  ninja
  779  cmake -GNinja ../..
  780  rm -Rf *
  781  cmake -GNinja ../..
  782  ninja -V
  783  ninja -v
  784  ls -la
  785  ./cpp_demo 
  786  rm -Rf *
  787  cmake -GNinja ../..
  788  ninja -v
  789  ./cpp_demo 
  790  ls -la
  791  python3 -m pip install conan --user
  792  python -v
  793  python --version
  794  python3 --version
  795  cd ..
  796  ls -la
  797  python3 get-pip.py 
  798  sudo apt-get install python3-distutils
  799  python3 get-pip.py 
  800  python3 get-pip.py --user
  801  python3 -m pip install conan --user
  802  sudo vim /etc/environment 
  803  exit
  804  cd /mnt/d/Francisco/xampp/htdocs/Webassembly/
  805  ls -la
  806  cd @BuildChuckNorris2-Conan/
  807  LS -LA
  808  ls -la
  809  cd build/default/
  810  conan install ../..
  811  vim ~/.conan/conan.conf 
  812  conan install ../..
  813  vim ~/.conan/conan.conf 
  814  conan install ../..
  815  clear
  816  conan install ../..
  817  rm -Rf /home/francisco/.conan/data/sqlite3/3.21.0/bincrafters/stable/package/d387bd2221c901be07c63764726be9c0ed6ae28a
  818  conan install ../..
  819  history 
  820  history > historico
  821  history > historico.txt
